'use strict';

// __рассмотрим условный require
let moduleName = location.pathname.slice(1);

// __ранее выражение внутри require было известно на этапе сборке, но так бывает не всегда
// __часто мы хотим, чтобы приложение получало URL и на основе него решало, какой модуль подгрузить

// __если этой функциональности по какой-то причине не хватает, то можно явно вызвать module context
// __из документации: require.context(directory, useSubdirectories = false, regExp = /^\.\//)
// __указывается 1) директория 2) флаг (true/false) - спускаться ли в поддиректории 3) regexp на который проверять

// __создадим контекст в этой директории,б не будем заходить в поддиректории, и регэксп нам в данном случае не нужен
// __добавим regexp, чтобы контекст "не путался" и загружал модули по одному разу
let context = require.context('./routes', false, /\.js$/);

// __добавим keys
// __для каждого ключа из контекста будет прорекваерен соответствующий модуль и сразу вызван
context.keys().forEach(function(path) {
  let module = context(path);
  module();
});

// __добавим try-catch, чтобы отловить ошибки
// let route;
// try {
//   route = context('./' + moduleName);
// } catch (e) {
//   alert(e);
// }
// if (route) {
//   route();
// }
